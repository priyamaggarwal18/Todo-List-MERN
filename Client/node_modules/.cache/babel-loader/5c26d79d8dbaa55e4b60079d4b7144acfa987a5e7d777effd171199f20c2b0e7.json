{"ast":null,"code":"var _jsxFileName = \"D:\\\\data c\\\\OneDrive\\\\Desktop\\\\React Projects\\\\notes-app\\\\src\\\\Componentss\\\\Todolist.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { IoMdDoneAll } from \"react-icons/io\";\nimport { TodoContext } from \"../Contexts/TodoContext\";\nimport '../Styles/todolist.css';\nimport { LoginContext } from \"../Contexts/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const {\n    listTodo,\n    setListTodo\n  } = useContext(TodoContext);\n  const {\n    username\n  } = useContext(LoginContext); // Import LoginContext and get username\n\n  const sortTaskPriority = tasks => {\n    return tasks.sort((a, b) => {\n      return b.priority - a.priority;\n    });\n  };\n  const handleDeleteTodo = index => {\n    const updatedTasks = [...listTodo.slice(0, index), ...listTodo.slice(index + 1)];\n    setListTodo(updatedTasks);\n    localStorage.setItem(username, JSON.stringify({\n      ...JSON.parse(localStorage.getItem(username)),\n      tasks: updatedTasks\n    }));\n  };\n  const handleDone = index => {\n    const updatedTasks = listTodo.map((task, i) => i === index ? {\n      ...task,\n      done: !task.done\n    } : task);\n    setListTodo(updatedTasks);\n    localStorage.setItem(username, JSON.stringify({\n      ...JSON.parse(localStorage.getItem(username)),\n      tasks: updatedTasks\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: sortTaskPriority(listTodo).map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `note ${task.done ? 'done' : ''}`,\n      style: {\n        backgroundColor: task.color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${task.done ? \"btn-1\" : \"btn-2\"}`,\n          onClick: () => handleDone(index),\n          children: /*#__PURE__*/_jsxDEV(IoMdDoneAll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: () => handleDeleteTodo(index),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"kf6EXPwEo4yBm89YvrAEvcacqAc=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useContext","IoMdDoneAll","TodoContext","LoginContext","jsxDEV","_jsxDEV","TodoList","_s","listTodo","setListTodo","username","sortTaskPriority","tasks","sort","a","b","priority","handleDeleteTodo","index","updatedTasks","slice","localStorage","setItem","JSON","stringify","parse","getItem","handleDone","map","task","i","done","className","children","style","backgroundColor","color","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/data c/OneDrive/Desktop/React Projects/notes-app/src/Componentss/Todolist.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { IoMdDoneAll } from \"react-icons/io\";\r\nimport { TodoContext } from \"../Contexts/TodoContext\";\r\nimport '../Styles/todolist.css';\r\nimport { LoginContext } from \"../Contexts/LoginContext\";\r\nfunction TodoList() {\r\n  const { listTodo, setListTodo } = useContext(TodoContext);\r\n  const { username } = useContext(LoginContext); // Import LoginContext and get username\r\n\r\n  const sortTaskPriority=(tasks)=>{\r\n    return tasks.sort((a,b)=>{\r\n      return b.priority-a.priority;\r\n    });\r\n  }\r\n\r\n\r\n  const handleDeleteTodo = (index) => {\r\n    const updatedTasks = [...listTodo.slice(0, index), ...listTodo.slice(index + 1)];\r\n    setListTodo(updatedTasks);\r\n    localStorage.setItem(username, JSON.stringify({ ...JSON.parse(localStorage.getItem(username)), tasks: updatedTasks }));\r\n  };\r\n\r\n  const handleDone = (index) => {\r\n    const updatedTasks = listTodo.map((task, i) =>\r\n      i === index ? { ...task, done: !task.done } : task\r\n    );\r\n    setListTodo(updatedTasks);\r\n    localStorage.setItem(username, JSON.stringify({ ...JSON.parse(localStorage.getItem(username)), tasks: updatedTasks }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {sortTaskPriority(listTodo).map((task, index) => (\r\n        <div className={`note ${task.done ? 'done' : ''}`} key={index} style={{ backgroundColor: task.color }}>\r\n          <p>{task.text}</p>\r\n          <div className=\"btns\">\r\n          <button className={`${task.done?\"btn-1\":\"btn-2\"}`} onClick={() => handleDone(index)}><IoMdDoneAll /></button>\r\n          <button className=\"btn-2\" onClick={() => handleDeleteTodo(index)}>X</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}